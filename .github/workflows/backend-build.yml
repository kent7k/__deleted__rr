---
name: Build & Deploy to Amazon ECS

on:
  push:
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'

jobs:
  deploy:
    name: Deploy
    strategy:
      matrix:
        ruby: [ "2.7.1" ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    environment: production
    permissions:
      id-token: write
      contents: read
      actions: read

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare
        id: prep
        run: |
          GITHUB_TAG=$(echo $GITHUB_SHA | head -c7)
          echo "::set-output name=tagged_image::${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY__BACK }}:${GITHUB_TAG}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/iam_role_for_github_actions
          role-session-name: iam_role_for_github_actions

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.4.0

      - name: Build and push
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          file: ./backend/Dockerfile.prd
          build-args: |
            ARG_RUBY_VERSION=${{ matrix.ruby }}
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition meetwithkids-backend-task --query taskDefinition | jq -r 'del(
          .taskDefinitionArn,
          .requiresAttributes,
          .compatibilities,
          .revision,
          .status,
          .registeredAt,
          .registeredBy
          )' > task-definition.json

      - name: Print task definition file
        run: cat task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: backend-container
          image: ${{ steps.prep.outputs.tagged_image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.AWS_ECS_SERVICE__BACK }}
          cluster: ${{ secrets.AWS_ECS_CLUSTER }}
