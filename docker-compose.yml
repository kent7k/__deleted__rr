version: "3.7"

services:
  db:
    container_name: db
    platform: linux/x86_64
    image: mysql:5.7
    environment:
      TZ: Asia/Tokyo
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_ALLOW_EMPTY_PASSWORD: $MYSQL_ALLOW_EMPTY_PASSWORD
    restart: always
    volumes:
      - db-data:/var/lib/mysql:cached
#    ports:
#      - 3307:3306
#    networks:
#      app_net:
#        ipv4_address: '172.21.0.2'

  backend:
    build: 
      context: ./backend
      cache_from:
        - rails6api-development-cache
      args:
        WORKDIR: $WORKDIR
        CONTAINER_PORT: $CONTAINER_PORT
    container_name: backend
#    build: ./backend/
#    image: backend
    image: rails6api-development:0.1.0
    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'" 
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_ALLOW_EMPTY_PASSWORD: $MYSQL_ALLOW_EMPTY_PASSWORD
      API_DOMAIN: "localhost:$FRONT_PORT"
    stdin_open: true
    tty: true
    depends_on:
      - db
    ports:
      - "5050:3000"
#      - ${API_PORT:-5050}:${CONTAINER_PORT:-3000}
    volumes:
      - ./backend:/$WORKDIR:cached
#      - ./:/app:cached
      - ${GEMS_CACHE_DIR:-bundle-cache}:/bundle
      - rails-cache:/app/tmp/cache

#    networks:
#      app_net:
#        ipv4_address: '172.21.0.3'

  frontend:
    build:
      context: ./frontend
      args:
        WORKDIR: $WORKDIR
        CONTAINER_PORT: $CONTAINER_PORT
        API_URL: "http://localhost:$API_PORT"
    command: yarn run dev
    container_name: frontend
#    build: ./frontend/
#    image: frontend
    volumes:
      - ./frontend:/$WORKDIR:cached
      - node_modules_volume:/$WORKDIR/node_modules 
# node_modulesはホストと共有しないでvolumeマウント

    ports:
       - "3000:3000"
#      - "$FRONT_PORT:$CONTAINER_PORT"
#    networks:
#      app_net:
#        ipv4_address: '172.21.0.4'
    depends_on:
      - backend

#networks:
#  app_net:
#    driver: bridge
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.21.0.0/24

volumes:
  db-data:
  bundle-cache:
  rails-cache:
  node_modules_volume:
